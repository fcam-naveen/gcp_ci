steps:
  # Step 1: Print environment details
  - id : 'System info'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Cloud Build Version:"
        gcloud --version
        echo "Operating System:"
        uname -a
        echo "Installed Docker Version:"
        docker --version
        echo "Installed Git Version:"
        git --version
        
  # Step 1: Build the Docker image
  - id: 'Build Docker Image'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/my-python-app', '.']

  # Step 2: Run the Docker container in detached mode
  - id: 'Run the Docker container in detached mode'
    name: 'gcr.io/cloud-builders/docker'
    args: ['run', '--name', 'pytest-container', '-d', 'gcr.io/$PROJECT_ID/my-python-app', 'sleep', 'infinity']

  - id: 'list'
    name: 'gcr.io/cloud-builders/docker'
    args: ['images']

  - id: 'print containers'
    name: 'gcr.io/cloud-builders/docker'
    args: ['ps', '-a']
    
  # Step 3: Execute tests inside the running container
  - id: 'Execute tests inside the running container'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', 'pytest-container', 'bash', '-c', 'pytest --alluredir=allure-results']

 # Step 4: Generate Allure report inside the running container
  - id: 'Generate Allure Report'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', 'pytest-container', 'sh', '-c', 'allure generate --clean -o allure-report allure-results']

  # Step 5: Copy the Allure report from the container to the host
  - id: 'Copy the Allure report from the container to the host'
    name: 'gcr.io/cloud-builders/docker'
    args: ['cp', 'pytest-container:/app/allure-report', './allure-report']

  # Step 9: Print the URL of the Allure report
  - id: 'List allure-report'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args: ['-c', 'ls -ltr ./allure-report']    

  # Step 6: Upload Allure report as build artifact
  - id: 'Upload Allure report as build artifact'
    name: 'gcr.io/cloud-builders/gsutil'
    args: ['cp', '-r', './allure-report', 'gs://my-allure-reports-new/${BUILD_ID}']

  # Step 7: Stop and remove the Docker container
  - id: 'Stop and remove the Docker container'
    name: 'gcr.io/cloud-builders/docker'
    args: ['rm', '-f', 'pytest-container']

  # Step 8: Set GCS bucket for static website hosting (this step is optional if the bucket is already configured)
  - id: 'Set GCS bucket for static website hosting (this step is optional if the bucket is already configured)'
    name: 'gcr.io/cloud-builders/gsutil'
    args: ['web', 'set', '-m', 'index.html', '-e', 'index.html', 'gs://my-allure-reports-new/']

  # Step 9: Print the URL of the Allure report
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args: ['-c', 'echo "Allure report URL: http://$PROJECT_ID-allure-reports.storage.googleapis.com/index.html"']

options:
  logging: CLOUD_LOGGING_ONLY    
